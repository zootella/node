





the two package.json's easily go together
yes, you could get it all in one folder

main.js -> electron-main.js
index.html -> electron.html
page.js -> electron.js
style.css -> electron.css

then, figure out how to have it just like
$ node some_file.js demo something
you can enter anywhere you want

$ electron/win/electron.exe .
will start the default
and then you get a window that has just
$
and there you load demos, dialogs, and even apps that take over the whole page
and familiar is the first of those apps
and backup is a later app





when you ship, think about how few files you can put this all in


readme.txt (contains hashes and build info, and instructions how to get working with npm and electron)
package.json
start.js
index.html
style.css
code.js (with app and library sections, and a map at the start that shows what depends on what, and prettily formatted documentation throughout)




and it's al in there, even if it's like 2mb, all the
application code
library code
workspace code, like chucking stuff back and forth
tests
documentation, including the thing where you can open the file in a browser and see the source code

ok, how do you do that? can you  make code.js actually code.html, can index.html



and then have an app built into familiar that organizes all the components, and let's you chuck






of course, because the user has npm, and npm can make files from parts of files, you could probably get it down to even fewer files
but you don't like it that it changes when it runs, so you'r eimaging the architecture that doesn't change when it runs

what if it were all in index.html, and when electron runs index.html it runs the app, and when the browser opens index.html it shows the code






you can do it as three files

index.html (combines readme, style, app, library, tests, documentation)
package.json
start.js

runs without editing these files or making more files

and then your development system builds index.html, chucking stuff into and out of that big file, letting you run the app either way
and index.html is huge, but always human-readable in both the browser and a text editor, and lots of fun





